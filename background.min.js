let port;function createContextMenuItems(e){chrome.contextMenus.removeAll((()=>{chrome.contextMenus.create({id:"captureQuestion",title:"⚡️ Quick Answer",contexts:["selection"],enabled:e}),chrome.contextMenus.create({id:"captureHint",title:"💡 Hint",contexts:["selection"],enabled:e}),chrome.contextMenus.create({id:"capturePointers",title:"🧠 Pointers",contexts:["selection"],enabled:e})}))}async function checkSubscriptionStatus(){const e=!0;return chrome.storage.local.set({subscriptionActive:e}),createContextMenuItems(e),e}async function injectContentScript(e){try{chrome.tabs.get(e,(t=>{isValidUrl(t.url)&&chrome.scripting.executeScript({target:{tabId:e},files:["content.js"]},(()=>{chrome.runtime.lastError}))}))}catch(e){}}function isValidUrl(e){return(e.startsWith("http://")||e.startsWith("https://"))&&!e.startsWith("chrome://")&&!e.startsWith("chrome-extension://")&&!e.startsWith("chrome.google.com")}async function processText(e,t,s){let o;switch(s){case"answer":o=await getShortAnswerFromOpenAI(e);break;case"hint":o=await getHintFromOpenAI(e);break;case"pointers":o=await getPointersFromOpenAI(e);break;case"capture":chrome.storage.local.get(["captureAnswer"],(function(e){o=e.captureAnswer}));break;default:return}chrome.tabs.sendMessage(t,{action:"displayResponse",response:o,type:s}),chrome.storage.local.set({response:o},(()=>{chrome.runtime.sendMessage({action:"updatePopupResponse",response:o}),chrome.action.setBadgeText({text:"1"}),chrome.action.setBadgeBackgroundColor({color:"#FFB202"}),setTimeout((()=>{chrome.action.setBadgeText({text:""})}),1e4)}))}async function getShortAnswerFromOpenAI(e){const t=await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer sk-proj-iVh1LEs7YUU6k7A89WwBT3BlbkFJdAosaN0GAY6Uwh1RGGSA"},body:JSON.stringify({model:"gpt-4o",messages:[{role:"system",content:"You are a helpful assistant."},{role:"user",content:`Question: ${e}\nProvide a short answer to this ideally 1 or 2 words max, but use up to 5 if you deem necessary.`}],max_tokens:100,temperature:0})});return(await t.json()).choices[0].message.content.trim()}async function getHintFromOpenAI(e){const t=await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer sk-proj-iVh1LEs7YUU6k7A89WwBT3BlbkFJdAosaN0GAY6Uwh1RGGSA"},body:JSON.stringify({model:"gpt-4o",messages:[{role:"system",content:"You are a helpful assistant."},{role:"user",content:`Question: ${e}\nProvide a hint to the answer of this question in one sentence or less. Don't include Hint: at the front, just give me the hint by itself.`}],max_tokens:50,temperature:0})});return(await t.json()).choices[0].message.content.trim()}async function getPointersFromOpenAI(e){const t=await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer sk-proj-iVh1LEs7YUU6k7A89WwBT3BlbkFJdAosaN0GAY6Uwh1RGGSA"},body:JSON.stringify({model:"gpt-4o",messages:[{role:"system",content:"You are a helpful assistant."},{role:"user",content:`Question: ${e}\nProvide 5 bullet points with memory jogs/pointers for the answer, they don't have to be grammatically correct, just as valuable words as possible to achieve academic marks.`}],max_tokens:100,temperature:0})});return(await t.json()).choices[0].message.content.trim()}async function getCaptureResponse(e){console.log("Getting capture response for: ",e);const t=`Please provide as short as possible and concise response to the following.\n                    If it's a math equation, just provide the solution e.g solve it, find the variables e.g  if it was 7x - y = 14, find what x and y are and respond with those.\n                    If it's a text-based question, provide the briefest possible answer ideally 1-2 words, but less than 5 if possible.\n\n                    Input: "${e}"`,s=await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer sk-proj-iVh1LEs7YUU6k7A89WwBT3BlbkFJdAosaN0GAY6Uwh1RGGSA"},body:JSON.stringify({model:"gpt-4o",messages:[{role:"system",content:"You are a helpful assistant."},{role:"user",content:t}],max_tokens:50,temperature:.1})}),o=await s.json();return o.choices[0]?.message?.content.trim()||"No response found"}function triggerCaptureProcess(e,t,s,o){chrome.tabs.query({active:!0,currentWindow:!0},(n=>{const r=n[0].id;chrome.tabs.sendMessage(r,{action:"startCapture",startX:e,startY:t,width:s,height:o})}))}async function sendToGPT4o(e){try{const t=await getCaptureResponse(e);chrome.storage.local.set({captureAnswer:t},(function(){})),chrome.storage.local.set({response:t},(()=>{chrome.runtime.sendMessage({action:"updatePopupResponse",response:t})}))}catch(e){}}chrome.runtime.onInstalled.addListener((()=>{createContextMenuItems(!0),chrome.alarms.create("checkSubscription",{periodInMinutes:144088888888}),checkSubscriptionStatus(),chrome.tabs.query({},(e=>{for(let t of e)isValidUrl(t.url)&&injectContentScript(t.id)}))})),chrome.runtime.onMessage.addListener(((e,t,s)=>{switch(e.action){case"captureArea":chrome.tabs.captureVisibleTab(null,{format:"png"},(s=>{chrome.tabs.sendMessage(t.tab.id,{action:"processCapturedImage",imageUri:s,startX:e.coordinates.startX,startY:e.coordinates.startY,width:e.coordinates.width,height:e.coordinates.height},(async e=>{console.log("Captured image processed, received response:",e);const s=await getCaptureResponse(e.extractedText);chrome.tabs.sendMessage(t.tab.id,{action:"displayResponse",response:s,type:"capture"}),chrome.runtime.sendMessage({action:"updatePopupResponse",response:s}),chrome.storage.local.set({response:s})}))}));break;case"ocrCompleted":console.log("OCR Completed, extracted text:",e.extractedText),(async()=>{const s=await getCaptureResponse(e.extractedText);chrome.tabs.sendMessage(t.tab.id,{action:"displayResponse",response:s,type:"capture"}),chrome.runtime.sendMessage({action:"updatePopupResponse",response:s}),chrome.storage.local.set({response:s})})();break;case"checkSubscriptionStatus":return checkSubscriptionStatus().then((e=>{s({active:e})})),!0;case"triggerSelection":chrome.tabs.query({active:!0,currentWindow:!0},(e=>{const t=e[0].id;chrome.scripting.executeScript({target:{tabId:t},files:["selectionOverlay.js"]},(()=>{chrome.runtime.lastError?s({success:!1}):s({success:!0})}))}))}return!0})),chrome.alarms.onAlarm.addListener((e=>{"checkSubscription"===e.name&&checkSubscriptionStatus()})),chrome.runtime.onStartup.addListener((()=>{checkSubscriptionStatus()})),chrome.contextMenus.onClicked.addListener(((e,t)=>{if("captureQuestion"===e.menuItemId||"captureHint"===e.menuItemId||"capturePointers"===e.menuItemId){const s="captureQuestion"===e.menuItemId?"answer":"captureHint"===e.menuItemId?"hint":"pointers";processText(e.selectionText,t.id,s)}})),chrome.commands.onCommand.addListener((e=>{"capture_shortcut"===e&&chrome.storage.local.get(["subscriptionActive","stealthMode"],(e=>{const t=e.subscriptionActive||!1,s=e.stealthMode||!1;t&&chrome.tabs.query({active:!0,currentWindow:!0},(e=>{chrome.tabs.sendMessage(e[0].id,{action:"triggerSelection",stealthMode:s})}))}))}));