let tesseractWorker=null;async function initializeTesseract(){if(!tesseractWorker)try{await loadTesseractScript(),tesseractWorker=await Tesseract.createWorker(),await tesseractWorker.load(),await tesseractWorker.loadLanguage("eng"),await tesseractWorker.initialize("eng")}catch(e){console.error("Error initializing Tesseract worker:",e)}}function loadTesseractScript(){return new Promise(((e,t)=>{const r=document.createElement("script");r.src=chrome.runtime.getURL("libs/tesseract.min.js"),r.onload=()=>{"undefined"!=typeof Tesseract?e():t(new Error("Tesseract is undefined after loading"))},r.onerror=()=>t(new Error("Failed to load Tesseract")),document.head.appendChild(r)}))}async function captureAndProcess(e,t,r,s,a){try{tesseractWorker||await initializeTesseract();const o=window.devicePixelRatio||1,i=new Image;i.src=e,await new Promise(((e,t)=>{i.onload=e,i.onerror=t}));const n=document.createElement("canvas"),c=n.getContext("2d"),d=t*o,l=r*o,g=s*o,p=a*o;n.width=g,n.height=p,c.drawImage(i,d,l,g,p,0,0,g,p);const{data:{text:u}}=await tesseractWorker.recognize(n.toDataURL("image/png"));chrome.runtime.sendMessage({action:"ocrCompleted",extractedText:u},(e=>{}))}catch(e){console.error("Error in captureAndProcess:",e)}}function displayResponseInPage(e,t){chrome.storage.local.get(["stealthMode","subscriptionActive"],(e=>{const t=e.stealthMode||!0;let r=!0;void 0!==e.subscriptionActive&&(r=e.subscriptionActive),console.log("Stealth Mode:",t),console.log("Subscription Active:",r)}))}initializeTesseract(),chrome.runtime.onMessage.addListener(((e,t,r)=>{"displayResponse"===e.action?displayResponseInPage(e.response,e.type):"processCapturedImage"===e.action?(captureAndProcess(e.imageUri,e.startX,e.startY,e.width,e.height),r({status:"Capture processed"})):"triggerSelection"===e.action&&(chrome.runtime.sendMessage({action:"triggerSelection"},(e=>{})),r({status:"Selection process initiated"}))}));